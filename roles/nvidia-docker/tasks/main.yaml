---
- name: Add nvidia-docker registory
  shell: "{{ item }}"
  with_items:
    - "docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f"
#    - "apt-get purge -y nvidia-docker"
    - "curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | apt-key add -"
    - "curl -s -L https://nvidia.github.io/nvidia-docker/{{ DISTRIBUTION }}/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list"

- name: Install nvidia-docker
  apt:
    name: "{{ item }}"
    force: yes
    update_cache: yes
  with_items:
#    - "libnvidia-container-tools"
#    - "libnvidia-container1"
#    - "nvidia-container-runtime"
#    - "nvidia-container-runtime-hook"
#    - "nvidia-docker2"
    - "nvidia-container-runtime=2.0.0+docker18.06.0-1"
    - "nvidia-docker2=2.0.3+docker18.06.0-1"

- name: Run nvidia-docker
  shell: "{{ item }}"
  with_items:
    - "pkill -SIGHUP dockerd"
  ignore_errors: True
#    - "docker run --runtime=nvidia --rm nvidia/cuda nvidia-smi"

- name: Copy daemon.json
  template:
    src: "{{ role_path }}/templates/daemon.json.j2"
    dest: "/etc/docker/daemon.json"
  notify:
    - restart nvidia-docker

- name: Update kubelet.conf
  template:
    src: "{{ role_path }}/templates/nvidia-kubelet.j2"
    dest: "/data/apps/kubernetes/conf/kubelet"
  notify:
    - restart kubelet
